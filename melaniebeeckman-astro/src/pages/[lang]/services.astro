---
import BlocksRendererWrapper from '../../components/BlocksRendererWrapper';
import "../styles/global.css";
import { getAsLanguage, getLanguagePaths } from '../../i18n/utils';
import Layout from '../../layouts/Layout.astro';

const STRAPI_URL = import.meta.env.STRAPI_API_URL;
const STRAPI_TOKEN = import.meta.env.STRAPI_API_TOKEN;
let services: any[] = [];
try {
    const response = await fetch(`${STRAPI_URL}/services`, {
        headers: {
            'Authorization': `Bearer ${STRAPI_TOKEN}`
        }
    });
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    const data = await response.json();
    services = data.data;
} catch (error) {
    console.error("Error fetching services:", error);
}

const lang = getAsLanguage(Astro.params.lang, Astro.currentLocale);

export function getStaticPaths() {
    return getLanguagePaths();
}
---

<Layout lang={lang}>
    <h1 class="text-amber-300">Our Services</h1>
    {services.length > 0 ? (
            <ul>
                {services.map(service => (
                        <li>
                            <h2>{service.name}</h2>
                            <BlocksRendererWrapper content={service.description} />
                        </li>
                ))}
            </ul>
    ) : (
            <p>No services found or error fetching data.</p>
    )}
</Layout>